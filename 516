class Solution {
public:
    int longestPalindromeSubseq(string s) {
        int len = s.length();
        vector<vector<int>> dp(len, vector<int>(len, 1));
        for (int i=0; i<len-1; ++i)
        {
            if (s[i] == s[i+1])
                dp[i][i+1] = 2;
        }
        for (int i=3; i<=len; ++i)
        {
            for (int j=0; j<(len-i+1); ++j)
            {
                int k = j+i-1;
                if (s[j] == s[k] && dp[j+1][k-1])
                {
                    dp[j][k] = 2 + dp[j+1][k-1];
                }
                else
                {
                    dp[j][k] = max(dp[j+1][k], dp[j][k-1]);
                }
            }
        }
        return dp[0][len-1];
    }
};

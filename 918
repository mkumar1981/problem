class Solution {
public:
    int maxSubarraySumCircular(vector<int>& nums) {
        int n = nums.size();
        int max_sum_so_far = 0, min_sum_so_far = 0;
        int max_sum = numeric_limits<int>::min();
        int min_sum = numeric_limits<int>::max(), total = 0;
        
        for (int i=0; i<n; ++i)
        {
            total += nums[i];
            max_sum_so_far += nums[i];
            min_sum_so_far += nums[i];
            max_sum = max(max_sum, max_sum_so_far);
            min_sum = min(min_sum, min_sum_so_far);
            max_sum_so_far = max(0, max_sum_so_far);
            min_sum_so_far = min(0, min_sum_so_far);
        }
        if (min_sum==total)
            return max_sum;
        return max(max_sum, (total-min_sum));
    }
};

class Solution {
private:
    struct compare{
        bool operator()(const pair<int, int>& p1, const pair<int, int>& p2)
        {
            return p1.first<p2.first;
        }
    };
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        priority_queue<pair<int, int>, vector<pair<int, int>>, compare> pq;
        for (int i=0; i<k; ++i)
            pq.push({nums[i], i});
        vector<int> result;
        for (int i=k; i<nums.size(); ++i)
        {
            auto node = pq.top();
            result.push_back(node.first);
            pq.push({nums[i], i});
           
            while ((i-pq.top().second)>=k)
            {
                pq.pop();
            }
        }
        result.push_back(pq.top().first);
        return result;
    }
};

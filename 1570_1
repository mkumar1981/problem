class SparseVector {
private:
    unordered_map<int, int> nMap;
public:
    
    SparseVector(vector<int> &nums) {
        for(int i=0; i<nums.size(); ++i)
        {
            if (nums[i])
                nMap[i] = nums[i];
        }
    }
    
    // Return the dotProduct of two sparse vectors
    int dotProduct(SparseVector& vec) {
        int res = 0;
        
        for(auto & iter: nMap)
        {
            if (vec.nMap.count(iter.first))
                res += (iter.second * vec.nMap[iter.first]);
        }
        return res;
    }
};

// Your SparseVector object will be instantiated and called as such:
// SparseVector v1(nums1);
// SparseVector v2(nums2);
// int ans = v1.dotProduct(v2);

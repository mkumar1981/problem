class Solution {
public:
    int numWays(string s) {
        int ones = 0;
        for(int i=0; i<s.length(); ++i)
        {
            if (s[i] == '1')
                ++ones;
        }
        if (ones%3)
            return 0;
        else if (ones==0)
        {
            int mod = 1000000007;
            int n = s.length();
            long res = (((long)n-1)*((long)n-2))/2;
            return res%mod;
        }
        else
        {
            int mod = 1000000007;
            int T = ones/3;
            long index1 = -1, index2 = -1, index3=-1, index4=-1;
            ones = 0;
            for(int i=0; i<s.length(); ++i)
            {
                if (s[i] == '1')
                {
                    ++ones;
                    if (index1!=-1 && index2==-1)
                    {
                        index2=i;
                    }
                    else if (index3!=-1 && index4==-1)
                    {
                        index4=i;
                        break;
                    }
                    if (ones==T)
                    {
                        if (index1==-1)
                        {
                            index1 = i;
                        }
                        else if (index3==-1)
                        {
                            index3 = i;
                        }
                        ones = 0;
                    }
                }
            }
            return ((index2-index1)%mod * (index4-index3)%mod)%mod;
        }
    }
};

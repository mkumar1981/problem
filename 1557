class Solution {
private:
    class Graph
    {
    private:
        list<int> *adjList;
        vector<int> indegree;
    public:
        Graph(int n)
        {
            adjList = new list<int>[n];
            indegree.resize(n,0);
        }
        void buildGraph(vector<vector<int>>& edges)
        {
            for(auto& edge: edges)
            {
                adjList[edge[0]].push_back(edge[1]);
                ++indegree[edge[1]];
            }
        }
        vector<int> dfs(int n)
        {
            vector<int> ans;
            for (int i=0; i<n; ++i)
            {
                if (indegree[i]==0)
                {
                    ans.push_back(i);
                }
            }
            return ans;
        }
    };
public:
    vector<int> findSmallestSetOfVertices(int n, vector<vector<int>>& edges) {
        Graph g(n);
        g.buildGraph(edges);
        return g.dfs(n);
    }
};

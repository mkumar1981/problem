class Solution {
public:
    /*
    * f(n, P) = f(n-1, P) + f(n-1, A) + f(n-1, L)
    * f(n, L) = f(n-1, P) + f(n-1, A) + f(n-2, P) + f(n-2, A)
    * f(n, A) = f(n-1, not A)
    * g(n, P) = g(n-1, P) + g(n-1, L)
    * g(n, L) = g(n-1, P) + g(n-2, P)
    * T[N] = P[N] + L[N] + A[N]
    * P[N] = P[N-1] + A[N-1] + L[N-1]
    * L[N] = P[N-1] + A[N-1] + P[N-2] + A[N-2]
    * P[1] = 1
    * P[2] = 3
    * L[1] = 1
    * L[2] = 3
    * g(1, P) = 1
    * g(1, L) = 1
    * g(1) = 2
    * g(2, P) = 2
    * g(2, L) = 2
    * g(2) = 4
    * g(3, P) = 4
    * g(3, L) = 3
    * g(3) = 7
    * g(4) = 13
    * g(n) = g(n-1) + g(n-2) + g(n-3)
    * A[N] = g[N]
    */
    int checkRecord(int n) {
        if (n==1) return 3;
        long A[n+1];
        long L[n+1];
        long P[n+1];
        int mod = 1000000007;
        A[0] = 1;
        A[1] = 2;
        A[2] = 4;
        P[0] = 1;
        L[0] = 1;
        L[1] = 3;
        for (int i=1; i<n; ++i)
        {
            P[i] = ((P[i-1]+A[i-1])%mod + L[i-1])%mod;
            if (i>1)
                L[i] = ((P[i-1]+A[i-1])%mod + (P[i-2]+A[i-2])%mod)%mod;
            if (i>2)
                A[i] = ((A[i-1]+A[i-2])%mod + A[i-3])%mod;
        }
        return ((P[n-1]+A[n-1])%mod + L[n-1])%mod;
    }
};

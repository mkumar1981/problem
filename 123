class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n = prices.size();
        vector<int> left(n, 0);
        vector<int> right(n, 0);
        int min_price = prices[0];
        left[0] = 0;
        for (int i=1; i<n; ++i)
        {
            if (min_price>prices[i])
                min_price = prices[i];
            left[i] = max(left[i-1], prices[i]-min_price);
        }
        int max_price = prices[n-1];
        right[n-1] = 0;
        for (int i=n-2; i>=0; --i)
        {
            if (max_price<prices[i])
                max_price = prices[i];
            right[i] = max(right[i+1], max_price-prices[i]);
        }
        
        int profit = 0;
        for(int i=0; i<n; ++i)
        {
            profit = max(profit, left[i]+right[i]);
        }
        return profit;
    }
};
